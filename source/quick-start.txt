.. _csharp-quickstart:

===========
Quick Start
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/quick-start/overview.rst

Create a MongoDB Cluster
------------------------

Set Up a Free Tier Cluster in Atlas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After setting up your .NET project dependencies, create a MongoDB cluster
where you can store and manage your data. Complete the
:atlas:`Get Started with Atlas </getting-started>` guide to set up a new
Atlas account and free tier MongoDB cluster, load datasets, and
interact with the data.

After completing the steps in the Atlas guide, you have a new MongoDB
cluster deployed in Atlas, a new database user, and
:atlas:`sample datasets loaded </sample-data/>` into your cluster.

Find Your Connection String
~~~~~~~~~~~~~~~~~~~~~~~~~~~

To connect to the Atlas cluster you created in the previous step, you need the 
*connection string* for your cluster and user. A connection string contains the 
information the {+driver-short+} needs to connect 
to a MongoDB cluster, including the hostname or IP address and port of the
cluster, authentication mechanism, user credentials (when applicable), and
other connection options.

To retrieve the connection string for your Atlas cluster and user, complete the 
:guides:`Get Connection String </atlas/connection-string>`
guide. Once you have finished the guide, you will have a connection string similar to the 
following:

.. code-block:: bash

   "mongodb+srv://username:password@cluster0.abc.mongodb.net/?retryWrites=true&w=majority"

Save your Atlas connection string to an environment variable named ``MONGODB_URI``. 
This prevents potential security issues caused by including your credentials in the 
source code.

.. code-block:: bash

   export MONGODB_URI='<your atlas connection string>'

Set Up Your Project
-------------------

Create the Project
~~~~~~~~~~~~~~~~~~

Create a new directory and initialize your project with the ``dotnet new`` command, as follows:

.. code-block:: shell

   mkdir csharp-quickstart
   cd csharp-quickstart
   dotnet new console

.. _csharp-add-mongodb-dependency:

Add MongoDB as a Dependency
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the ``dotnet add`` command to add the {+driver-short+} to your project as a dependency.

.. code-block:: shell

   dotnet add package MongoDB.Driver

Query Your MongoDB Cluster from Your Application
------------------------------------------------

In this step, you'll use the {+driver-short+} 
to connect to your MongoDB cluster and run a query on the sample data.

Open the file named ``Program.cs`` in the base directory of your project. Copy the
following sample code into ``Program.cs`` 

.. literalinclude:: /includes/quick-start/Program.cs
   :language: csharp
   :dedent:

The sample code runs a query against your sample dataset in MongoDB Atlas. Run the 
sample code with the following command from your command line:

.. code-block:: bash

   dotnet run csharp-quickstart.csproj

.. include:: /includes/quick-start/query-output.rst

.. tip::

   If your output is empty, ensure you have loaded the
   :atlas:`sample datasets </sample-data/>` into your cluster.

After completing this step, you should have a working application that uses
the {+driver-short+} to connect to your MongoDB cluster, run a query on the
sample data, and print out the result.

To learn more about connecting to Atlas with the {+driver-short+}, see
the :atlas:`Atlas driver connection guide </driver-connection>`
and select **{+language+}** from the *Select your language* dropdown.

Next steps
----------

Learn how to read and modify data using the {+driver-short+} in the CRUD Operations 
guide or how to perform common operations in Usage Examples.
