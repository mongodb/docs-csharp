.. _csharp-connection-options:

==================
Connection Options
==================

This section describes the MongoDB connection and authentication options
available in the {+driver-short+}. To use these options, include them as parameters in the connection URI when connecting your client to MongoDB.

.. note::
  
  You can set any of the following options, as well as some others not on this list, with a ``MongoClientSettings`` object instead. See :ref:`csharp-mongo-client-settings` for more information.

.. list-table::
   :header-rows: 1
   :widths: 1 1 1 1

   * - Name
     - Accepted Values
     - Default Value
     - Description

   * - **appName**
     - String
     - ``null``
     - The app name the driver passes to the server in the client
       metadata as part of the connection handshake. The server prints this value to the MongoDB logs once the connection is established. The value is also recorded in the slow query logs and profile collections.

   * - **authMechanism**
     - String
     - ``null``
     - The authentication mechanism the driver uses when connecting to the
       server. If you don't include this option, the driver uses either ``SCRAM-SHA-1`` or ``SCRAM-SHA-256``, depending on the server version. 
       
       See
       :ref:`authentication mechanisms <csharp-authentication-mechanisms>` for available
       authentication mechanisms.

   * - **authMechanismProperties**
     - Comma-separated ``key:value`` pairs (for example, ``opt1:val1,opt2:val2``)
     - ``null``
     - Other authentication options, such as enabling hostname canonicalization for  GSSAPI.

   * - **authSource**
     - String
     - ``null``
     - The database that connections should authenticate against.

   * - **compressors**
     - Comma-separated list of strings (for example, ``snappy,zlib,zstd``)
     - ``null``
     - The preferred compression types, in order, for wire-protocol messages
       sent to or received from the server. The driver uses the first of these compression types that the server supports.
       
       See :ref:`csharp-network-compression` for more information.

   * - **connectTimeoutMS**
     - Nonnegative integer
     - ``30000``
     - The length of time the driver tries to establish a single TCP
       socket connection to the server before timing out. Specifying ``0`` disables the connection timeout.

   * - **directConnection**
     - Boolean
     - ``false``
     - Specifies whether to force dispatch **all** operations to the host
       specified in the connection URI.

   * - **heartbeatFrequencyMS**
     - Integer greater than or equal to 500
     - ``10000``
     - The interval between regular server-monitoring checks.

   * - **journal**
     - Boolean
     - ``null``
     - Specifies the default write concern ``"j"`` field for the client. See
       :ref:`write concern <wc-j>` for more information.

   * - **loadBalanced**
     - Boolean
     - ``false``
     - Specifies whether the driver is connecting to a load balancer.

   * - **localThresholdMS**
     - Nonnegative integer
     - ``15``
     - The latency window for server eligibility. If a server's round trip takes longer than the fastest server's round-trip time plus this value, the server isn't eligible for selection. Specifying ``0`` selects the fastest eligible server.

   * - **maxIdleTimeMS**
     - Nonnegative integer
     - ``10000``
     - The length of time a connection can be idle before the driver closes it.
       Specifying ``0`` means no minimum.

   * - **maxPoolSize**
     - Nonnegative integer
     - ``100``
     - The greatest number of clients or connections the driver
       can create in its connection pool. This count includes connections
       in use.

   * - **maxConnecting**
     - Nonnegative integer
     - ``2``
     - The greatest number of connections a driver's connection
       pool may be establishing concurrently.

   * - **maxStalenessSeconds**
     - Integer equal to -1 or greater than or equal to 90
     - ``-1``
     - The longest replication lag, in wall-clock time, that
       a secondary can experience and still be eligible for server selection.
       Specifying ``-1`` means no maximum.

   * - **minPoolSize**
     - Nonnegative integer
     - ``0``
     - The number of connections the driver should create and
       keep in the connection pool even when no operations are occurring.
       This count includes connections in use.

   * - **readConcernLevel**
     - String
     - ``null``
     - The client's default read concern. See :ref:`read concern
       <read-concern>` for more information.

   * - **readPreference**
     - String
     - ``"primary"``
     - The client's default read preference (excluding tags). See :ref:`read preference <read-preference>` for more information.

   * - **readPreferenceTags**
     - Comma-separated ``key:value`` pairs (for example, ``opt1:val1,opt2:val2``)
     - ``null``
     - The default read-preference tags for the client. This option is
       valid only if the read-preference mode is not ``primary``.
       
       You can include this parameter in the connection URI more than once. If you do, the client treats each instance as a separate tag set. The order of the tags in the URI determines the order for read preference.

   * - **replicaSet**
     - String
     - ``null``
     - The name of the replica set to connect to.

   * - **retryReads**
     - Boolean
     - ``true``
     - Enables retryable reads.

   * - **retryWrites**
     - Boolean
     - ``true``
     - Enables retryable writes.

   * - **serverSelectionTimeoutMS**
     - Nonnegative integer
     - ``30000``
     - The length of time the driver tries to select a server before timing out.

   * - **socketTimeoutMS**
     - Nonnegative integer
     - ``0``
     - The length of time the driver tries to send or receive on a
       socket before timing out. Specifying ``0`` means no timeout.

   * - **srvMaxHosts**
     - Nonnegative integer
     - ``0``
     - The greatest number of SRV results to randomly select when initially
       populating the seedlist or, during SRV polling, adding new hosts to the
       topology. Specifying ``0`` means no maximum.

   * - **ssl**
     - Boolean
     - ``false``
     - This option is an alias for the ``tls`` option.

   * - **tls**
     - Boolean
     - ``false``
     - Specifies whether to require TLS for connections to the server. If you use a scheme of ``"mongodb+srv"``, or specify other ``tls``-prefixed options, this option defaults to ``true``.

   * - **tlsDisableCertificateRevocationCheck**
     - Boolean
     - ``false``
     - Specifies whether the driver checks a certificate's revocation status using either CRLs or OCSP.

   * - **tlsInsecure**
     - Boolean
     - ``false``
     - Specifies whether to relax TLS constraints as much as possible. This can include allowing invalid certificates or hostname mismatches.

   * - **w**
     - String or nonnegative integer 
     - ``null``
     - The default write concern ``"w"`` field for the client. See
       :ref:`write concern <wc-j>` for more information.

   * - **wTimeoutMS**
     - Nonnegative integer
     - ``0``
     - The default write concern ``"wtimeout"`` field for the client. Specifying ``0`` means no timeout. See
       :ref:`write concern <wc-j>` for more information.

   * - **waitQueueTimeoutMS**
     - Nonnegative integer
     - ``0``
     - The length of time the driver tries to check out a connection
       from a server's connection pool before timing out. Specifying ``0`` means no timeout.

   * - **zlibCompressionLevel**
     - Integer between ``-1`` and ``9`` (inclusive)
     - ``-1``
     - When using the zlib compressor, the level of compression for wire-protocol messages. 
     
       - ``-1`` signifies the default compression level.
       - ``0`` signifies no compression.
       - ``1`` signifies the fastest compression.
       - ``9`` signifies the greatest compression.
       - An integer between ``2`` and ``8`` (inclusive) signifies a compromise between speed and compression.
     
       See :ref:`csharp-network-compression` for more information.

