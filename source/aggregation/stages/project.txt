.. _csharp-aggregation-project:

=======
Project
=======

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: code example, transform, pipeline

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Project
-------

Use the ``project()`` method to create a :manual:`$project </reference/operator/aggregation/project/>`
pipeline stage that project specified document fields. Field projection
in aggregation follows the same rules as :ref:`field projection in queries <java-fundamentals-project>`.

.. tip::

   Though the projection can be an instance of any class that implements ``Bson``,
   it's convenient to combine with use of :ref:`Projections <projections-builders>`.

The following example creates a pipeline stage that excludes the ``_id`` field but
includes the ``title`` and ``plot`` fields:

.. literalinclude:: /includes/aggregation/Builders.cs
   :start-after: begin project
   :end-before: end project
   :language: csharp
   :dedent:


Projecting Computed Fields
~~~~~~~~~~~~~~~~~~~~~~~~~~

The ``$project`` stage can project computed fields as well.

The following example creates a pipeline stage that projects the ``rated`` field
into a new field called ``rating``, effectively renaming the field.

.. literalinclude:: /includes/aggregation/Builders.cs
   :start-after: begin computed
   :end-before: end computed
   :language: csharp
   :dedent:

$project
~~~~~~~~

The ``$project`` aggregation stage returns a document containing only the specified
fields.

Select the :guilabel:`Method Syntax` or :guilabel:`Query Syntax` tab to see how 
to generate a ``$project`` stage using LINQ:

.. tabs::

   .. tab:: Method Syntax
      :tabid: method-syntax

      .. code-block:: csharp
         :emphasize-lines: 2

         var query = queryableCollection
             .Select(r => new { r.Name, r.Address });

   .. tab:: Query Syntax
      :tabid: query-syntax

      .. code-block:: csharp
         :emphasize-lines: 2

         var query = from r in queryableCollection
             select new { r.Name, r.Address };

The result of the preceding example contains the following document:

.. code-block:: json

   { "name" : "The Movable Feast", "address" : { "building" : "284", "coord" : [-73.982923900000003, 40.6580753], "street" : "Prospect Park West", "zipcode" : "11215" } }

.. note:: Excluding the ``_id`` Field

   If you don't include the ``_id`` field in your LINQ projection, the {+driver-short+}
   automatically excludes it from the results.
