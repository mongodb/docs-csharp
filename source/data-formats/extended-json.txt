.. _csharp-extended-json:

=============
Extended JSON
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: code examples, bson, relaxed, canonical, legacy

.. sharedinclude:: dbx/extended-json.rst

.. _extended_json_example_section:

.. note::

   The {+driver-short+} parses the ``$uuid`` Extended JSON type from a string to a
   ``BsonBinary`` object of binary subtype 4. For more information about ``$uuid`` field
   parsing, see the
   :spec:`special rules for parsing $uuid fields </extended-json/extended-json.md#special-rules-for-parsing-uuid-fields>`
   section in the extended JSON specification.

Extended JSON Examples
~~~~~~~~~~~~~~~~~~~~~~

The following examples show a document containing an ObjectId, date, and long
number field represented in each Extended JSON format. Click the tab that
corresponds to the format of the example you want to see:

.. tabs::

   .. tab:: Extended
      :tabid: extended-format

      .. code-block:: json

         {
           "_id": { "$oid": "573a1391f29313caabcd9637" },
           "createdAt": { "$date": { "$numberLong": "1601499609" }},
           "numViews": { "$numberLong": "36520312" }
         }

   .. tab:: Relaxed Mode
      :tabid: relaxed-mode-format

      .. code-block:: json

         {
           "_id": { "$oid": "573a1391f29313caabcd9637" },
           "createdAt": { "$date": "2020-09-30T18:22:51.648Z" },
           "numViews": 36520312
         }

   .. tab:: Shell
      :tabid: shell-format

      .. code-block:: json

         {
           "_id": ObjectId("573a1391f29313caabcd9637"),
           "createdAt": ISODate("2020-09-30T18:22:51.648Z"),
           "numViews": NumberLong("36520312")
         }

Read Extended JSON
------------------

You can read an Extended JSON documents into a {+language+} object by using the
``BsonSerializer.Deserialize<T>()`` method. The following example reads an
Extended JSON document into a ``BsonDocument`` object:

.. io-code-block::

   .. input:: /includes/fundamentals/code-examples/ExtendedJson.cs
      :language: csharp
      :start-after: start-read-ejson
      :end-before: end-read-ejson
      :dedent:

   .. output::
      :visible: false

      { "_id" : { "$oid" : "573a1391f29313caabcd9637" }, "createdAt" : { "$date" : "1970-01-19T12:51:39.609Z" }, "numViews" : 36520312 }

Write Extended JSON
-------------------

You can write an Extended JSON string by calling the ``ToJson()`` method on a
``BsonDocument`` object or custom class. You must specify a ``JsonWriterSettings`` object
with the ``OutputMode`` property set to the desired Extended JSON format as a parameter.

Consider the following custom class:

.. literalinclude:: /includes/fundamentals/code-examples/ExtendedJson.cs
   :language: csharp
   :start-after: start-custom-class
   :end-before: end-custom-class

The following example outputs an instance of ``MyDocument`` in
Extended JSON format by specifying the ``CanonicalExtendedJson`` value as an ``OutputMode``
property:

.. io-code-block::

   .. input:: /includes/fundamentals/code-examples/ExtendedJson.cs
      :language: csharp
      :start-after: start-write-ejson
      :end-before: end-write-ejson
      :dedent:

   .. output::
      :visible: false

      { "_id" : { "$oid" : "68094769744af81f368ff1c1" }, "CreatedAt" : { "$date" : { "$numberLong" : "1745438569994" } }, "NumViews" : { "$numberLong" : "1234567890" } }

API Documentation
-----------------

To learn more about the methods and classes used on this page, see the following API
documentation:

- `BsonDocument <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.BsonDocument.html>`__
- `BsonSerializer <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.Serialization.BsonSerializer.html>`__
- `ToJson() <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.BsonExtensionMethods.ToJson.html>`__
- `JsonWriter <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.IO.JsonWriter.html>`__
- `JsonReader <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.IO.JsonReader.html>`__
- `JsonWriterSettings <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.IO.JsonWriterSettings.html>`__
- `JsonReaderSettings <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.IO.JsonReaderSettings.html>`__
- `JsonOutputMode <{+new-api-root+}/MongoDB.Bson/MongoDB.Bson.IO.JsonOutputMode.html>`__