.. _csharp-serialization:

=============
Serialization
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+driver-long+} to perform
:wikipedia:`serialization </serialization>`.
Serialization is the process of mapping a C# object to a BSON document for
storage in MongoDB.

Serializers
-----------

Serializers are classes that handle the translation of C# objects to and
from BSON documents. Most serializers implement the ``IBsonSerializer``
interface. The {+driver-short+} has many built-in serializers made to handle
primitive types, collection types, and custom classes.

For a full list of available serializers, see the
`Serializers namespace API documentation <{+api-root+}/N_MongoDB_Bson_Serialization_Serializers.htm>`__.

Serializer Registry
-------------------

The serializer registry is an implementation of the ``IBsonSerializerRegistry`` interface
that contains all registered serializers. Before you can use a serializer, you
must register it by adding it to the serializer registry, as
shown in the following example:

.. code-block:: csharp

   BsonSerializer.RegisterSerializer(typeof(MySerializerType), new MySerializer); 

You can access the serializer registry with the ``SerializerRegistry`` property
of the ``BsonSerializer`` class as follows:

.. code-block:: csharp

   var intSerializer = BsonSerializer.SerializerRegistry.GetSerializer<int>();

.. important::

   The serializer registry is a global registry. This means that you cannot use
   multiple registries in a single application.

Custom Serializers
~~~~~~~~~~~~~~~~~~

In some cases, you might need to create a custom serializer. When creating a
custom serializer, implement the ``SerializerBase<T>`` interface and
override the ``Deserialize()`` and ``Serialize()`` methods. 

The following code example shows how to implement a custom serializer for
an ``int``:

.. code-block:: csharp

   class MyIntSerializer : SerializerBase<int>
   {
       public override int Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)
       {
           return context.Reader.ReadInt();
       }
   
       public override void Serialize(BsonSerializationContext context, BsonSerializationArgs args, int value)
       {
           context.Writer.WriteInt(value);
       }
   }

.. tip::

   The {+driver-short+} provides a built-in `Int32Serializer 
   <{+api-root+}/T_MongoDB_Bson_Serialization_Serializers_Int32Serializer.htm>`__.

Opt-in Interfaces
-----------------

The {+driver-short+} has several optional interfaces that your custom serializer
class can implement, depending on the type of data the serializer handles.

IBsonIdProvider
~~~~~~~~~~~~~~~

The `IBsonIdProvider
<{+api-root+}/T_MongoDB_Bson_Serialization_IBsonIdProvider.htm>`__
interface provides the ``GetDocumentId()`` and ``SetDocumentId()``
methods, and is useful if the object you are serializing uses an ID type other than ``ObjectId``.

IBsonDocumentSerializer
~~~~~~~~~~~~~~~~~~~~~~~

Implementing the `IBsonDocumentSerializer
<{+api-root+}/T_MongoDB_Bson_Serialization_IBsonDocumentSerializer.htm>`__
interface enables the driver to access the member
information of the object your are serializing. This allows the driver to
properly construct type-safe queries when using a custom serializer.

IBsonArraySerializer
~~~~~~~~~~~~~~~~~~~~

Implementing the `IBsonArraySerializer
<{+api-root+}/T_MongoDB_Bson_Serialization_IBsonArraySerializer.htm>`__
interface enables the driver to access serialization information for individual
items in an array. 

Additional Information
----------------------

To learn more about any of the methods or types discussed in this
guide, see the following API documentation:

- `IBsonSerializerRegistry <{+api-root+}/P_MongoDB_Bson_Serialization_BsonSerializer_SerializerRegistry.htm>`__
- `SerializerRegistry <{+api-root+}/P_MongoDB_Bson_Serialization_BsonSerializer_SerializerRegistry.htm>`__
- `BsonSerializer <{+api-root+}/T_MongoDB_Bson_Serialization_BsonSerializer.htm>`__
- `IBsonSerializer <{+api-root+}/T_MongoDB_Bson_Serialization_IBsonSerializer.htm>`__
- `SerializerBase<T> <{+api-root+}/T_MongoDB_Bson_Serialization_Serializers_SerializerBase_1.htm>`__